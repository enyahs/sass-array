@import 'array';

/**
 * Set up function for array_merge().
 * 
 * @param Map or List $array
 * @param Map or List $array2
 * @return array_merge_handle
 */
@function array_merge(
    $array,
    $array2
)
{

    $arg_array_type: type-of($array);
    $valid_array_type: ($arg_array_type == map or $arg_array_type == list);

    $arg_array2_type: type-of($array2);
    $valid_array2_type: ($arg_array2_type == map or $arg_array2_type == list);

    @if(
        (
            $valid_array_type and
            $valid_array2_type
        ) 
    )
    {
        
        @return array_merge_handle(
            $array,
            $array2
        );

    }
    @else
    {

        $errors: '';

        $errors: $errors + if(
            $valid_array_type == false, 
            "\a\aTypeError array_count(): \a\a parameter: 1 \a expected: map or list \a given: " + $arg_array_type + "\a\a",
            ""
        );

        $errors: $errors + if(
            $valid_array2_type == false, 
            "\a\aTypeError array_merge_recursive(): \a\a parameter: 2 \a expected: map or list \a given: " + $arg_array2_type + "\a\a",
            ""
        );

        @error $errors;

    }

    @return false;

}

/**
 * Get an item inside an array.
 * 
 * @param Array $array
 * @param Array $array2
 * @return Array - An array of two arrays merged.
 */
 @function array_merge_handle(
    $array,
    $array2
)
{

    @if(type-of($array) == list and type-of($array2) == list){ @return array(join($array, $array2, comma)); }
    @else{ @return array(map-merge(array($array), array($array2))); }

}