@import 'array';
@import 'array_values';

/**
 * Set up function for array_reverse().
 * 
 * @param Map or List $array
 * @param Boolean $preserve_keys
 * @return array_reverse_handle
 */
@function array_reverse(
    $array,
    $preserve_keys: false
)
{

    $arg_array_type: type-of($array);
    $valid_array_type: ($arg_array_type == map or $arg_array_type == list);

    $arg_preserve_keys_type: type-of($preserve_keys);
    $valid_preserve_keys_type: ($arg_preserve_keys_type == bool);

    @if(
        (
            $valid_array_type and
            $valid_preserve_keys_type
        ) 
    )
    {
        
        @return array_reverse_handle(
            array($array),
            $preserve_keys
        );

    }
    @else
    {

        $errors: '';

        $errors: $errors + if(
            $valid_array_type == false, 
            "\a\aTypeError array_reverse(): \a\a parameter: 1 \a expected: map or list \a given: " + $arg_array_type + "\a\a",
            ""
        );

        $errors: $errors + if(
            $valid_preserve_keys_type == false, 
            "\a\aTypeError array_reverse(): \a\a parameter: 2 \a expected: bool \a given: " + $arg_preserve_keys_type + "\a\a",
            ""
        );

        @error $errors;

    }

    @return false;

}

/**
 * Returns an array in reverse order.
 * 
 * @param Array $array
 * @param Boolean $preserve_keys
 * @return Array - An array in reverse order.
 */
 @function array_reverse_handle(
    $array,
    $preserve_keys
)
{

    $reversed_array: ();

    @each $k, $v in $array
    {

        $reversed_array: map-merge(($k: $v), $reversed_array);

    }

    @return if($preserve_keys, $reversed_array, array_values_handle($reversed_array));

}